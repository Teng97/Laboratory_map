<?xml version="1.0" encoding="UTF-8"?>
<launch>

	<!-- Load the params -->
	<rosparam command="load" file="$(find turtlebot_udg_simulation)/params/config.yaml" />
	
	<!-- Laboratory model path -->
	<env name="GAZEBO_MODEL_PATH" value="$(find turtlebot_udg_simulation)/models"/>	
	
	<!-- these are the arguments -->
	<arg name="debug" value="false"/>
	<arg name="gui" value="true"/>
	<arg name="paused" value="true"/>
	<arg name="recording" value="false"/>
	<arg name="use_sim_time" value="true"/>
	<arg name="world" value="$(find turtlebot_udg_simulation)/worlds/laboratory_map.world"/>
	
	<arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  	<arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  	<arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  	
  	<!--<arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  --> <!-- kinect, asus_xtion_pro -->
	
	<arg name="3d_sensor"  default="hokuyo"/>
	
	<!-- This argument is used to show or not the hokuyo laser in gazebo -->
	<arg name="visual" value="false"/>
	
	<!-- This argument is used to define the standard deviation of noise of hokuyo laser -->
	<arg name="stddev" value="0.01"/>
	
	<!-- Use rviz with custom config from external package, default use rviz with custom config from this package -->
	<arg name="external_rviz_config"   default="false"/>
	
	<!-- world file -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world)"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
	</include>
	
	<!-- gazebo-->
	<include file="$(find turtlebot_udg_gazebo)/launch/includes/$(arg base).launch.xml">
		<arg name="base" value="$(arg base)"/>
		<arg name="stacks" value="$(arg stacks)"/>
		<arg name="3d_sensor" value="$(arg 3d_sensor)"/>
		<arg name="visual" value="$(arg visual)"/>
		<arg name="stddev" value="$(arg stddev)"/>
	</include>
	
	<!-- Split and Merge node-->
	<include file="$(find split_and_merge)/launch/split_and_merge.launch">
		<arg name="simulator" default="true"/>
	</include>
	
	
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="30.0" />
	</node>
	
	<!-- Rviz -->
	<group unless="$(arg external_rviz_config)">
	    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find turtlebot_udg_simulation)/rviz_config/turtlebot2_udg_config.rviz"/>
		
	</group>
	
	<!-- Add noise to odometry -->
	<node name="add_noise" pkg="turtlebot_udg_simulation" type="addNoise.py" output="screen"/> 
	
	 <!-- Fake laser -->
	  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
	  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
		args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
	    <param name="scan_height" value="10"/>
	    <param name="output_frame_id" value="camera_depth_frame"/>
	    <param name="range_min" value="0.45"/>
	    <remap from="image" to="/camera/depth/image_raw"/>
	    <remap from="scan" to="/camera_scan"/>
	  </node>
</launch>
